// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using erp.Infrastructure.Data;

#nullable disable

namespace erp.App.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250802071056_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("erp.Domain.Models.Category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryId"));

                    b.Property<string>("categoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("erp.Domain.Models.Company", b =>
                {
                    b.Property<int>("companyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("companyId"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("binNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("businessType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tinNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("companyId");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("erp.Domain.Models.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cateId")
                        .HasColumnType("int");

                    b.Property<string>("hsnCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maxStock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("minStock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("openingStock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wareHouse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("productId");

                    b.HasIndex("cateId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("erp.Domain.Models.Supplier", b =>
                {
                    b.Property<int>("supplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("supplierId"));

                    b.Property<string>("Local")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("binNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("officeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tinNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("supplierId");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("erp.Domain.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("bill_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bill_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emp_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emp_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emp_designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("net_amount")
                        .HasColumnType("int");

                    b.Property<string>("particular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("referance_no")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("erp.Domain.Models.Product", b =>
                {
                    b.HasOne("erp.Domain.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("cateId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("erp.Domain.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
